// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/documents": {
            "get": {
                "description": "get document details by its UUID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "documents"
                ],
                "summary": "Get a document by UUID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Document UUID",
                        "name": "documentUUID",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Owner UUID",
                        "name": "ownerUUID",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Document"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            },
            "post": {
                "description": "Uploads a document by receiving its base64 encoded string in the request body.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "documents"
                ],
                "summary": "Upload a new document",
                "parameters": [
                    {
                        "description": "Document upload request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v1.CreateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful upload, returns the document UUID",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request, typically due to invalid input or upload failure"
                    }
                }
            },
            "delete": {
                "description": "Deletes a document based on the provided document UUID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "documents"
                ],
                "summary": "Delete a document",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The UUID of the document to delete",
                        "name": "documentUUID",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful deletion",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "boolean"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request, typically due to missing/invalid UUID or deletion failure"
                    }
                }
            }
        },
        "/meta": {
            "get": {
                "description": "Retrieves metadata associated with a given UUID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "meta"
                ],
                "summary": "Get metadata by UUID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The UUID of the metadata to retrieve",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful retrieval of metadata",
                        "schema": {
                            "$ref": "#/definitions/models.Meta"
                        }
                    },
                    "400": {
                        "description": "Bad request, typically due to missing/invalid UUID"
                    },
                    "500": {
                        "description": "Internal server error, typically due to database issues"
                    }
                }
            },
            "put": {
                "description": "Updates specific fields of an existing metadata entry.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "meta"
                ],
                "summary": "Update existing metadata",
                "parameters": [
                    {
                        "description": "Metadata update request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v1.UpdateMetaRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful update"
                    },
                    "400": {
                        "description": "Bad request, typically due to invalid input"
                    },
                    "500": {
                        "description": "Internal server error, typically due to database issues"
                    }
                }
            },
            "post": {
                "description": "Creates new metadata with a generated UUID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "meta"
                ],
                "summary": "Add new metadata",
                "parameters": [
                    {
                        "description": "Metadata creation request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v1.AddMetaRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful creation, returns the metadata UUID",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request, typically due to invalid input"
                    },
                    "500": {
                        "description": "Internal server error, typically due to database issues"
                    }
                }
            },
            "delete": {
                "description": "Deletes metadata based on the provided UUID in the request body.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "meta"
                ],
                "summary": "Delete metadata by UUID",
                "parameters": [
                    {
                        "description": "Metadata deletion request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v1.DeleteMetaRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful deletion",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "boolean"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request, typically due to invalid input"
                    },
                    "500": {
                        "description": "Internal server error, typically due to database issues"
                    }
                }
            }
        },
        "/selections": {
            "get": {
                "description": "Retrieves selections based on either a document's UUID or a specific selection's UUID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "selections"
                ],
                "summary": "Get selections by document or selection UUID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The UUID of the document to retrieve selections for",
                        "name": "documentUUID",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "The UUID of the specific selection to retrieve",
                        "name": "selectionUUID",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful retrieval of selections",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/definitions/models.Selection"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request, typically due to missing/invalid UUID parameter"
                    },
                    "500": {
                        "description": "Internal server error, typically due to database issues"
                    }
                }
            },
            "post": {
                "description": "Creates a new selection associated with a document.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "selections"
                ],
                "summary": "Add a new selection",
                "parameters": [
                    {
                        "description": "Selection creation request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v1.AddNewSelectionRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful creation, returns the selection UUID",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request, typically due to invalid input"
                    },
                    "500": {
                        "description": "Internal server error, typically due to database issues"
                    }
                }
            },
            "delete": {
                "description": "Deletes selections based on a specific selection UUID or all selections associated with a document UUID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "selections"
                ],
                "summary": "Delete selections by selection or document UUID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The UUID of the specific selection to delete",
                        "name": "selectionUUID",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "The UUID of the document whose selections are to be deleted",
                        "name": "documentUUID",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful deletion",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "boolean"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request, typically due to missing/invalid UUID parameter"
                    },
                    "500": {
                        "description": "Internal server error, typically due to database issues"
                    }
                }
            }
        }
    },
    "definitions": {
        "models.Document": {
            "type": "object",
            "properties": {
                "documentUUID": {
                    "type": "string",
                    "example": "ba3ca973-5052-4030-a528-39b49736d8ad"
                },
                "ownerType": {
                    "type": "string"
                },
                "ownerUUID": {
                    "type": "string"
                },
                "pdfBase64": {
                    "type": "string"
                },
                "selectionData": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Selection"
                    }
                }
            }
        },
        "models.Meta": {
            "type": "object",
            "properties": {
                "height": {
                    "type": "number",
                    "format": "float32"
                },
                "images": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "numberOfPages": {
                    "type": "integer",
                    "format": "int32"
                },
                "ownerType": {
                    "type": "string"
                },
                "ownerUUID": {
                    "type": "string"
                },
                "uuid": {
                    "type": "string"
                },
                "width": {
                    "type": "number",
                    "format": "float32"
                }
            }
        },
        "models.Selection": {
            "type": "object",
            "properties": {
                "documentUUID": {
                    "type": "string"
                },
                "isComplete": {
                    "type": "boolean"
                },
                "selectionBounds": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "array",
                        "items": {
                            "$ref": "#/definitions/models.SelectionBounds"
                        }
                    }
                },
                "selectionUUID": {
                    "type": "string"
                },
                "settings": {
                    "type": "string"
                }
            }
        },
        "models.SelectionBounds": {
            "type": "object",
            "properties": {
                "extract_method": {
                    "type": "string",
                    "example": "None"
                },
                "x1": {
                    "type": "number",
                    "example": 43.122
                },
                "x2": {
                    "type": "number",
                    "example": 13
                },
                "y1": {
                    "type": "number",
                    "example": 52.125
                },
                "y2": {
                    "type": "number",
                    "example": 27.853
                }
            }
        },
        "v1.AddMetaRequest": {
            "type": "object",
            "properties": {
                "height": {
                    "type": "number",
                    "format": "float32"
                },
                "images": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "numberOfPages": {
                    "type": "integer",
                    "format": "int32"
                },
                "width": {
                    "type": "number",
                    "format": "float32"
                }
            }
        },
        "v1.AddNewSelectionRequest": {
            "type": "object",
            "properties": {
                "documentUUID": {
                    "type": "string"
                },
                "isComplete": {
                    "type": "boolean"
                },
                "selectionBounds": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "array",
                        "items": {
                            "$ref": "#/definitions/models.SelectionBounds"
                        }
                    }
                },
                "settings": {
                    "type": "string"
                }
            }
        },
        "v1.CreateRequest": {
            "type": "object",
            "properties": {
                "documentBase64String": {
                    "type": "string"
                },
                "ownerType": {
                    "type": "string"
                },
                "ownerUUID": {
                    "type": "string"
                }
            }
        },
        "v1.DeleteMetaRequest": {
            "type": "object",
            "properties": {
                "uuid": {
                    "type": "string"
                }
            }
        },
        "v1.UpdateMetaRequest": {
            "type": "object",
            "properties": {
                "height": {
                    "type": "number",
                    "format": "float32"
                },
                "images": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "numberOfPages": {
                    "type": "integer",
                    "format": "int32"
                },
                "uuid": {
                    "type": "string"
                },
                "width": {
                    "type": "number",
                    "format": "float32"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
